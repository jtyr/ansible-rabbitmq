---
- name: Distribution test
  assert:
    that: >
      (
        ansible_os_family == 'RedHat' and
        ansible_distribution_major_version | int >= 6
      ) or
      ansible_os_family == 'Debian'

- name: Add EPEL YUM repo
  yum_repository:
    name: epel
    description: EPEL YUM repo
    baseurl: "{{ rabbitmq_epel_yumrepo_url }}"
    gpgkey: "{{ rabbitmq_epel_yumrepo_gpgkey }}"
    params: "{{ rabbitmq_epel_yumrepo_params }}"
  when: >
    ansible_os_family == 'RedHat' and
    rabbitmq_epel_install == true
  tags:
    - rabbitmq_pkg

- name: Add APT key
  apt_key:
    url: "{{ rabbitmq_debian_aptrepo_key }}"
    state: present
  when: >
    ansible_os_family == 'Debian'

- name: Add APT repository
  apt_repository:
    repo: "{{ debian_apt_repository }}" 
    state: present
  when: >
    ansible_os_family == 'Debian'

- name: Install rabbitmq-server
  package:
    name: "{{ rabbitmq_pkg }}"
  notify:
    - Restart rabbitmq-server
  tags:
    - rabbitmq_pkg

- name: Setup RabbitMQ config
  template:
    src: rabbitmq.conf.j2
    dest: /etc/rabbitmq/rabbitmq.config
  notify:
    - Restart rabbitmq-server
  tags:
    - rabbitmq_config

- name: Create sbin symlink to find executables
  file:
    src: /usr/lib/rabbitmq/bin
    dest: /usr/lib/rabbitmq/sbin
    state: link
  tags:
    - rabbitmq_config

- name: Make sure rabbitmq-server is enabled and running
  service:
    name: rabbitmq-server
    enabled: true
    state: started
  tags:
    - rabbitmq_service

- name: Manage RabbitMQ vhosts
  rabbitmq_vhost:
    name: "{{ item.name }}"
    node: "{{ item.node | default('rabbit') }}"
    state: "{{ item.state | default('present') }}"
    tracing: "{{ item.tracing | default('no') }}"
  with_items: "{{ rabbitmq_vhosts }}"
  tags:
    - rabbitmq_config

- name: Manage RabbitMQ users
  rabbitmq_user:
    user: "{{ item.user }}"
    password: "{{ item.password | default('') }}"
    vhost: "{{ item.vhost | default('/') }}"
    tags: "{{ item.tags | default([]) | join(',') }}"
    configure_priv: "{{ item.configure_priv | default('^$') }}"
    read_priv: "{{ item.read_priv | default('^$') }}"
    write_priv: "{{ item.write_priv | default('^$') }}"
    node: "{{ item.node | default('rabbit') }}"
    state: "{{ item.state | default('present') }}"
    force: "{{ item.force | default('no') }}"
  with_items: "{{ rabbitmq_users }}"
  tags:
    - rabbitmq_config

- name: Manage RabbitMQ policies
  rabbitmq_policy:
    name: "{{ item.name }}"
    node: "{{ item.node | default('rabbit') }}"
    pattern: "{{ item.pattern | default('^$') }}"
    priority: "{{ item.priority | default(0) }}"
    state: "{{ item.state | default('present') }}"
    tags: "{{ item.tags | default('') }}"
    vhost: "{{ item.vhost | default('/') }}"
  with_items: "{{ rabbitmq_policies }}"
  tags:
    - rabbitmq_config

- name: Manage RabbitMQ plugins
  rabbitmq_plugin:
    names: "{{ item.names | join(',') }}"
    new_only: "{{ item.new_only | default('no') }}"
    prefix: "{{ item.prefix | default('') }}"
    state: "{{ item.state | default('enabled') }}"
  with_items: "{{ rabbitmq_plugins }}"
  notify:
    - Restart rabbitmq-server
  tags:
    - rabbitmq_config

- name: Manage RabbitMQ parameters
  rabbitmq_parameter:
    name: "{{ item.name }}"
    component: "{{ item.component }}"
    value: "{{ item.value | default('') }}"
    node: "{{ item.node | default('rabbit') }}"
    vhost: "{{ item.vhost | default('/') }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ rabbitmq_parameters }}"
  tags:
    - rabbitmq_config

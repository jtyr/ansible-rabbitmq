---

- name: Test if distribution is RedHat
  assert:
    that: >
      (ansible_os_family == "RedHat" and
      ansible_distribution_major_version | int >= 6)
      or (ansible_distribution == "Amazon" and
      ansible_distribution_version == "2015.09")

- name: Install erlang from yum repos
  yum:
    name: "{{ erlang_pkg }}"
  notify:
    - Restart rabbitmq-server
  tags:
    - erlang_pkg

- name: Install rabbitmq-server from yum repos
  yum:
    name: "{{ rabbitmq_pkg }}"
  notify:
    - Restart rabbitmq-server
  tags:
    - rabbitmq_pkg
  when: rabbitmq_yum_repo_url is undefined

- name: Add Rabbit signing-key
  rpm_key: state=present key=https://www.rabbitmq.com/rabbitmq-signing-key-public.asc
  tags:
    - rabbitmq_pkg
  when: rabbitmq_yum_repo_url is defined

- name: Install rabbitmq-server from rpm
  yum: name="{{ rabbitmq_yum_repo_url }}/{{ rabbitmq_pkg }}.rpm"
  tags:
    - rabbitmq_pkg
  when: rabbitmq_yum_repo_url is defined

- name: Setup RabbitMQ config
  template:
    src: rabbitmq.conf.j2
    dest: /etc/rabbitmq/rabbitmq.config
  notify:
    - Restart rabbitmq-server
  tags:
    - rabbitmq_config

- name: Make sure rabbitmq-server is enabled and running
  service:
    name: rabbitmq-server
    state: started
    enabled: true

- name: Create sbin symlink to find executables
  lineinfile: >
    dest=/root/.bashrc
    state=present
    line="PATH=$PATH:/usr/lib/rabbitmq/sbin"

- name: Manage RabbitMQ vhosts
  rabbitmq_vhost:
    name: "{{ item.name }}"
    node: "{{ item.node | default('rabbit') }}"
    state: "{{ item.state | default('present') }}"
    tracing: "{{ item.tracing | default('no') }}"
  with_items: rabbitmq_vhosts

- name: Manage RabbitMQ users
  rabbitmq_user:
    user: "{{ item.user }}"
    password: "{{ item.password | default('') }}"
    vhost: "{{ item.vhost | default('/') }}"
    tags: "{{ item.tags | default([]) | join(',') }}"
    configure_priv: "{{ item.configure_priv | default('^$') }}"
    read_priv: "{{ item.read_priv | default('^$') }}"
    write_priv: "{{ item.write_priv | default('^$') }}"
    node: "{{ item.node | default('rabbit') }}"
    state: "{{ item.state | default('present') }}"
    force: "{{ item.force | default('no') }}"
  with_items: rabbitmq_users

- name: Manage RabbitMQ policies
  rabbitmq_policy:
    name: "{{ item.name }}"
    node: "{{ item.node | default('rabbit') }}"
    pattern: "{{ item.pattern | default('^$') }}"
    priority: "{{ item.priority | default(0) }}"
    state: "{{ item.state | default('present') }}"
    tags: "{{ item.tags | default('') }}"
    vhost: "{{ item.vhost | default('/') }}"
  with_items: rabbitmq_policies

- name: Manage RabbitMQ plugins
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/lib/rabbitmq/sbin"
  rabbitmq_plugin:
    names: "{{ item.names | join(',') }}"
    new_only: "{{ item.new_only | default('no') }}"
    prefix: "{{ item.prefix | default('') }}"
    state: "{{ item.state | default('enabled') }}"
  with_items: rabbitmq_plugins
  notify:
    - Restart rabbitmq-server

- name: Manage RabbitMQ parameters
  rabbitmq_parameter:
    name: "{{ item.name }}"
    component: "{{ item.component }}"
    value: "{{ item.value | default('') }}"
    node: "{{ item.node | default('rabbit') }}"
    vhost: "{{ item.vhost | default('/') }}"
    state: "{{ item.state | default('present') }}"
  with_items: rabbitmq_parameters
